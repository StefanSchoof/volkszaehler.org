sudo: false
language: php

php:
    - 7.1
    - 7.3

services:
    - mysql

env:
  # run composer by default
  global:
    - TRAVIS_TEST_EXCLUDES="--exclude-group slow,pushserver"
    # docker credentials
    - secure: "aietzYUXpDYlTN6lP+qSjdpBf2+x+RYd1h/ostE4HWMXQwTkqJlHsE73YTfWOCtiSByUecGZ0axoEsjYCLuUnbAboLZNC8T/u42t/Z8HCF9mQPSluH9oQQyBIhDW1fFNDxf3amwMb7v4w687dsVed8PuhxvL5OcbPZpauz68/bgvCTNB0icwRcSR45oRT03dRVYvxaUHf1oVhyaL4M0AN0KrV00HLocRz4FzezJ7xo/e0iMuDtQQk3DnE5SLzjOfUaz4Tw0GiYqGAm+NgpazKSxtfj4w6w/5hUeKesNHR6afiyXdLVlFvfeJ/knpbelxjrow5WFZgla9OcIWn5s7n8F/z7gQMOXgY6uIhornrAoYWaOrnksoDussv+qM+Fnqdr7+ppTKsyA/23ZCiUpQqNvxAEEFRzWzqyKvBySc2njp7W3V0mCIx4178hXXN6Czx0IpWYyHq70OH8x3G3BcKB8KFYEfe22FzLF5hUX1eSp6RdIM0e38yleLl/t5kFMWEFiq9DteOTjOSVYua+UM0Di4l8kpIhQi0OpkDZXMdaOqepOTL/nmFtURLSJqJvhPcgSJqBMcFzvBC+adLv9xTqfMIo6w2tuw4S4wJ8PAa4T/4aM5aeJkz3sPpfSSDAlKL9pemGT5wW/Y+NEzzhy9RNRWGvFZO24TCQUOjnkquXY="
    - secure: "ItUm4P62+wnt2h0svGNyPHHnT/gswToX41zK/4fkCP5+et3IMd4mggCkSgqoRS2IfTpCOCRBzPbIYNZFCMVpCl5/ccwR2tJEJyqnJj8Wz7J8ChuE8IFPRHBj4Qx1tKjQXW0Dua0D7fTcf82rCyL/C+9UMWbRoofEbgi68TeoP04eO/r+bUIOoh5dVkkEzRFUTfEyRRFTQo/MOJkBGI/NQ6SHoNUIgjLoBsQyiDTlNLV92H4JdlIeNsnxS37lPBye2HUYtCZIRUW5s4NjyGahGxYDtSoX7AxDgq9ik/Q35kwOQryTyhLoK+deewZBToeJ9cmAllJbUROaYK+UUgSvYT1tvVvTkfVY1f6imaMf10l0cwmKfwGvmPD2FSNWgBcephBFEodGGSZoD+8GcHnc0ZL04ZB2QWYcEDkR6Lx0kLYnyjmwd2reIlMFUw4/9HSzO5AHaXEjnnz1dCpxXCVcWAYJ8L+k8cZ9H+Tq19g3OtNchWPPjQRGkGaq7Yo4TIEyT8gDTYW0zv73kYPfzjCwiUlK7rZ0rkHW9YHCNySqZ5Io6xvpMWPPz2TAy1oN7SnLkoYlyvYE0AA0ndQ3c4R47SlHFOfTLF2Q2cMc6oRSMjewoldUh0qaOa7+GPlP8DG7hkn3ZzmzcNOjDpRwsuvZscPVznx39Vvx3ptHUOV/J8c="

  matrix:
    - DB=mysql

matrix:
  include:
    # postgres
    # - php: 7.3
    #   services: postgresql
    #   env: DB=pgsql
    # # sqlite
    # - php: 7.3
    #   env: DB=sqlite
    # # httpd-based
    # - php: 7.3
    #   env: DB=mysql COMPONENT=HTTPD
    # # push-server
    # - php: 7.3
    #   env: DB=mysql COMPONENT=PUSHD
    # docker
    - php: 7.3
      env: DB=mysql COMPONENT=DOCKER
    # jslint-only
    # - php: 7.3
    #   env: DB= JSLINT=true

# speedup build
cache:
  directories:
    - $COMPOSER_CACHE_DIR
    - $HOME/.composer/cache
    - node_modules

before_install:
    # disable xdebug for composer performance
    - if [ -e /home/travis/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then rm /home/travis/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini; fi

install:
    - |
      if [ "$JSLINT" != true ]; then
        composer install
        # add apc cache
        phpenv config-add ./test/bin/apc.ini && printf "\n" | pecl install apcu
        php -r 'echo(function_exists("apcu_store")?"APCu enabled":"APCu disabled");'
      else
        npm install -g gulp
        npm install
      fi
      if [ "$COMPONENT" == "DOCKER" ]; then
        curl -sfL https://raw.githubusercontent.com/ldez/seihon/master/godownloader.sh | bash -s -- -b $GOPATH/bin
        seihon --version
      fi

before_script:
    # enable shell errors
    - set -e
    - cp etc/config.dist.yaml etc/config.yaml

    - DATABASE=volkszaehler
    - USER=root
    - PASSWORD=
    - if [ "$DB" = "pgsql" ]; then USER=postgres; fi

    # create config file
    - "sed -i \"s/driver: .*/driver: pdo_$DB/\" etc/config.yaml"
    - "sed -i \"s/user: .*/user: $USER/\" etc/config.yaml"
    - "sed -i \"s/password: .*/password: $PASSWORD/\" etc/config.yaml"
    - "sed -i \"s/dbname: .*/dbname: $DATABASE/\" etc/config.yaml"
    - cat etc/config.yaml

    # create database
    - if [ "$DB" = "mysql" ]; then mysql -e "CREATE DATABASE $DATABASE;" -u $USER; fi
    - if [ "$DB" = "pgsql" ]; then psql -c "CREATE DATABASE $DATABASE;" -U $USER; fi

    # create schema
    - if [ -n "$DB" ]; then php bin/doctrine orm:schema-tool:create; fi

    # start middleware service
    - |
      if [ "$COMPONENT" = "HTTPD" ]; then
        sed -i "s/testAdapter\" value=\".*\"/testAdapter\" value=\"HTTP\"/" phpunit.xml
        vendor/bin/ppm start -c etc/middleware.json &
      fi

    # push server tests
    - |
      if [ "$COMPONENT" = "PUSHD" ]; then
        php bin/push-server &
      fi

after_script:
    # stop middleware service
    - |
      if [ "$COMPONENT" = "HTTPD" ]; then
        vendor/bin/ppm stop -c etc/middleware.json
      fi

script:
    # run core tests
    - if [ -n "$DB" ]; then vendor/bin/phpunit $TRAVIS_TEST_EXCLUDES,aggregation; fi

    # run aggregation tests (mysql only)
    - |
      if [ "$DB" = "mysql" ]; then
        php bin/aggregate run -m delta -l hour
        vendor/bin/phpunit $TRAVIS_TEST_EXCLUDES
      fi

    # push server tests
    - if [ "$COMPONENT" = "PUSHD" ]; then vendor/bin/phpunit --group pushserver; fi

    # jslint javascript sources
    - if [ "$JSLINT" = true ]; then gulp jshint; fi

after_success:
    - |
      if [ "$COMPONENT" == "DOCKER" ] && [ "$DOCKER_USER" != "" ]; then
        docker login -u $DOCKER_USER -p $DOCKER_PASS
        export REPO=$DOCKER_USER/volkszaehler
        docker run --rm --privileged hypriot/qemu-register
        seihon publish --dry-run=false -v "latest" --image-name $REPO --base-runtime-image php:7.3-alpine
      fi
